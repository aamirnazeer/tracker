generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                String              @id @default(uuid())
  firstname         String              @db.VarChar(45)
  lastname          String              @db.VarChar(45)
  email             String              @unique(map: "email_UNIQUE") @db.VarChar(45)
  username          String              @unique(map: "username_UNIQUE") @db.VarChar(45)
  password          String              @db.VarChar(500)
  isDeleted         Int                 @default(0)
  entries           entries[]
  ledgers           ledgers[]
  ledgeracess       ledgeracess[]
  defaultuserledger defaultuserledger[]
}

model defaultuserledger {
  id       String  @id @default(uuid())
  userId   String  @db.VarChar(100)
  user     users   @relation(fields: [userId], references: [id])
  ledgerId String  @db.VarChar(100)
  ledger   ledgers @relation(fields: [ledgerId], references: [id])
}

model refreshtokens {
  id    String @id @default(uuid())
  token String @unique(map: "token_UNIQUE") @db.VarChar(500)
}

model catagories {
  id        String    @id @default(uuid())
  type      String    @db.VarChar(500)
  ledger    ledgers   @relation(fields: [ledgerid], references: [id])
  ledgerid  String    @db.VarChar(100)
  isDeleted Int       @default(0)
  entries   entries[]
}

model ledgers {
  id                String              @id @default(uuid())
  name              String              @db.VarChar(500)
  owner             users               @relation(fields: [ownerId], references: [id])
  ownerId           String              @db.VarChar(100)
  isDeleted         Int                 @default(0)
  type              Int                 @db.Int
  date              DateTime            @default(now())
  ledgeracess       ledgeracess[]
  entries           entries[]
  defaultuserledger defaultuserledger[]
  catagories        catagories[]
}

model ledgeracess {
  id       String  @id @default(uuid())
  ledger   ledgers @relation(fields: [ledgerid], references: [id])
  ledgerid String  @db.VarChar(100)
  users    users   @relation(fields: [userid], references: [id])
  userid   String  @db.VarChar(100)
}

model entries {
  id              String     @id @default(uuid())
  date            DateTime   @default(now())
  amount          Int        @db.Int
  transactionType Int        @db.Int
  ledgerId        String     @db.VarChar(100)
  ledger          ledgers    @relation(fields: [ledgerId], references: [id])
  catagory        catagories @relation(fields: [catagoryId], references: [id])
  catagoryId      String     @db.VarChar(100)
  comments        String     @db.VarChar(500)
  user            users      @relation(fields: [userId], references: [id])
  userId          String     @db.VarChar(100)
  isDeleted       Int        @default(0)
}
